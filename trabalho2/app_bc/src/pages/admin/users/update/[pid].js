import NavAdmin from '@/components/NavAdmin';
import Head from 'next/head';
import { useState, useEffect } from 'react';
import Axios from 'axios';
import styles from '@/styles/admin_articles.module.css';
import Input from '@/components/form/Input';
import InputRadio from '@/components/form/InputRadio';
import Buttons from '@/components/form/Buttons';
import { useRouter } from 'next/router';

export default function createuser() {

  const url = "http://localhost:8080/api/users/";
  const router = useRouter();
  const [pid] = useState(router.query.pid);

  const [user, setUser] = useState({
    author_name: undefined,
    author_email: undefined,
    author_user: undefined,
    author_pwd: undefined,
    admin_status: undefined,
    author_status: undefined,
  });

  useEffect(() => {
    const getUser = async () => {
      try {
        const response = await Axios.get(url + pid);
        setUser(response.data);
      } catch (error) {
        console.error('Erro ao buscar o usuário:', error);
      }
    };

    getUser();
  }, []);

  const handleChange = (event) => {
    const { name, value } = event.target;

    setUser({
      ...user,
      [name]: value
    });
  };

  const handleUpdateUser = async () => {
    try {
      const response = await Axios.put(url + pid, { user });
      // console.log(response.data);
    } catch (error) {
      console.error('Erro ao editar o usuário:', error);
    }
  };

  return (
    <>
      <Head>
        <title>Novo usuário</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <header>
        <NavAdmin />
      </header>

      <main className={styles.background_img}>
        <h2>Editar usuário</h2>

        <div className={styles.form_wrapper}>
          <form method='POST'>
            <Input
              type='text'
              text='Nome'
              name='author_name'
              placeholder='Digite...'
              value={user.author_name}
              eventOnChange={handleChange}
            />

            <hr></hr>

            <Input
              type='email'
              text='E-mail do autor'
              name='author_email'
              placeholder='Digite...'
              value={user.author_email}
              eventOnChange={handleChange}
            />

            <Input
              type='text'
              text='Usuário'
              name='author_user'
              placeholder='Digite...'
              value={user.author_user}
              eventOnChange={handleChange}
            />

            <Input
              type='password'
              text='Senha'
              name='author_pwd'
              placeholder='Digite...'
              value={user.author_pwd}
              eventOnChange={handleChange}
            />

            <InputRadio
              titulo={'Acesso do usuário'}
              text='Nível de usuário'
              name='admin_status'
              value={user.author_level}
              eventOnChange={handleChange}
              options={[
                { value: true, text: 'Admin' },
                { value: false, text: 'Usuário' },
              ]}
            />

            <InputRadio
              titulo={'Status de autor'}
              text='Ativo'
              name='author_status'
              value={user.author_status}
              eventOnChange={handleChange}
              options={[
                { value: true, text: 'Ativo' },
                { value: false, text: 'Inativo' },
              ]}
            />

            <Buttons
              href='/admin/users'
              eventOnClick={handleUpdateUser}
            />
          </form>
        </div>
      </main>
    </>
  )
}